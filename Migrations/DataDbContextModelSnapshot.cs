// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using clashCommunity_api.Tools;

#nullable disable

namespace clashCommunity_api.Migrations
{
    [DbContext(typeof(DataDbContext))]
    partial class DataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("clashCommunity_api.Models.Candidature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("ClanId")
                        .HasColumnType("int")
                        .HasColumnName("clan_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("status");

                    b.Property<int>("UserAppId")
                        .HasColumnType("int")
                        .HasColumnName("userapp_id");

                    b.HasKey("Id");

                    b.HasIndex("ClanId");

                    b.HasIndex("UserAppId");

                    b.ToTable("candidature");
                });

            modelBuilder.Entity("clashCommunity_api.Models.Clan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("tag");

                    b.HasKey("Id");

                    b.ToTable("clan");
                });

            modelBuilder.Entity("clashCommunity_api.Models.RoleApp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Role")
                        .HasColumnType("longtext")
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.ToTable("roleApp");
                });

            modelBuilder.Entity("clashCommunity_api.Models.UserApp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<bool>("CanApprove")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("can_approve");

                    b.Property<int>("ClanId")
                        .HasColumnType("int")
                        .HasColumnName("clan_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("password");

                    b.Property<string>("Pseudo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("pseudo");

                    b.Property<int>("RoleAppId")
                        .HasColumnType("int")
                        .HasColumnName("roleapp_id");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("tag");

                    b.HasKey("Id");

                    b.HasIndex("ClanId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleAppId");

                    b.ToTable("userApp");
                });

            modelBuilder.Entity("clashCommunity_api.Models.Candidature", b =>
                {
                    b.HasOne("clashCommunity_api.Models.Clan", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("clashCommunity_api.Models.UserApp", "UserApp")
                        .WithMany()
                        .HasForeignKey("UserAppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clan");

                    b.Navigation("UserApp");
                });

            modelBuilder.Entity("clashCommunity_api.Models.UserApp", b =>
                {
                    b.HasOne("clashCommunity_api.Models.Clan", "Clan")
                        .WithMany()
                        .HasForeignKey("ClanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("clashCommunity_api.Models.RoleApp", "RoleApp")
                        .WithMany()
                        .HasForeignKey("RoleAppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clan");

                    b.Navigation("RoleApp");
                });
#pragma warning restore 612, 618
        }
    }
}
